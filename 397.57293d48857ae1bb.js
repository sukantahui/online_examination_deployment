"use strict";(self.webpackChunkcoder_tutorial=self.webpackChunkcoder_tutorial||[]).push([[397],{5397:(y,u,a)=>{a.r(u),a.d(u,{BinaryTreeTutorialModule:()=>T});var l=a(6895),i=a(6264),e=a(4650);const c=[{path:"",component:(()=>{var r;class o{}return(r=o).\u0275fac=function(t){return new(t||r)},r.\u0275cmp=e.Xpm({type:r,selectors:[["app-binary-tree-tutorial"]],decls:2,vars:0,template:function(t,p){1&t&&(e.TgZ(0,"p"),e._uU(1,"binary-tree-tutorial works!"),e.qZA())}}),o})()}];let s=(()=>{var r;class o{}return(r=o).\u0275fac=function(t){return new(t||r)},r.\u0275mod=e.oAB({type:r}),r.\u0275inj=e.cJS({imports:[i.Bz.forChild(c),i.Bz]}),o})(),T=(()=>{var r;class o{}return(r=o).\u0275fac=function(t){return new(t||r)},r.\u0275mod=e.oAB({type:r}),r.\u0275inj=e.cJS({imports:[l.ez,s]}),o})()}}]);